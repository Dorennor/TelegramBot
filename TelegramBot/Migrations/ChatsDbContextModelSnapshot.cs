// <auto-generated />


#nullable disable

using System;
using DesktopApp.Database;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
namespace DesktopApp.Migrations;

[DbContext(typeof(TGBotDbContext))]
partial class ChatsDbContextModelSnapshot : ModelSnapshot
{
    protected override void BuildModel(ModelBuilder modelBuilder)
    {
#pragma warning disable 612, 618
        modelBuilder
            .HasAnnotation("ProductVersion", "6.0.4")
            .HasAnnotation("Relational:MaxIdentifierLength", 128);

        SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

        modelBuilder.Entity("DesktopApp.Models.Entities.Chat", b =>
        {
            b.Property<int>("Id")
                .ValueGeneratedOnAdd()
                .HasColumnType("int");

            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

            b.Property<long>("ChatId")
                .HasColumnType("bigint");

            b.Property<string>("FirstName")
                .HasColumnType("nvarchar(max)");

            b.Property<string>("LastName")
                .HasColumnType("nvarchar(max)");

            b.Property<string>("Username")
                .HasColumnType("nvarchar(max)");

            b.HasKey("Id");

            b.HasIndex("ChatId")
                .IsUnique();

            b.ToTable("Chats", (string)null);
        });

        modelBuilder.Entity("DesktopApp.Models.Entities.Song", b =>
        {
            b.Property<int>("Key")
                .ValueGeneratedOnAdd()
                .HasColumnType("int");

            SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Key"), 1L, 1);

            b.Property<DateTime>("AddedDateTime")
                .HasColumnType("datetime2");

            b.Property<string>("Album")
                .HasColumnType("nvarchar(max)");

            b.Property<string>("Artist")
                .HasColumnType("nvarchar(max)");

            b.Property<int>("Duration")
                .HasColumnType("int");

            b.Property<string>("FileId")
                .IsRequired()
                .HasColumnType("nvarchar(max)");

            b.Property<string>("FileName")
                .IsRequired()
                .HasColumnType("nvarchar(max)");

            b.Property<string>("FileUniqueId")
                .IsRequired()
                .HasColumnType("nvarchar(450)");

            b.Property<string>("Genres")
                .HasColumnType("nvarchar(max)");

            b.Property<string>("Performers")
                .HasColumnType("nvarchar(max)");

            b.Property<int?>("Rating")
                .HasColumnType("int");

            b.Property<string>("Tags")
                .HasColumnType("nvarchar(max)");

            b.Property<string>("Title")
                .HasColumnType("nvarchar(max)");

            b.Property<int?>("Year")
                .HasColumnType("int");

            b.HasKey("Key");

            b.HasIndex("FileUniqueId")
                .IsUnique();

            b.ToTable("Songs", (string)null);
        });
#pragma warning restore 612, 618
    }
}